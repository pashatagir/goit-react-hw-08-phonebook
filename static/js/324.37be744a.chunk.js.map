{"version":3,"file":"static/js/324.37be744a.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Phonebook/Phonebook.jsx","components/ContactsList/ContactsList.jsx","components/Section/Section.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nconst selectFilter = state => state.contacts.filter;\n\n// createSelector\nexport const selectFilteredContacts = createSelector(\n  // Масив вхідних селекторів\n  [selectContacts, selectFilter],\n  // Функція перетворювач\n  (contacts, filter) => {\n    // Виконуємо обчислення та повертаємо результат\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { Button, Input } from '@chakra-ui/react';\nimport { BsPersonFillAdd } from 'react-icons/bs';\nimport { FormAddContact, Label } from '../Style/Style.styled';\n\nconst Phonebook = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const name = e.target.name.value;\n    const number = e.target.number.value;\n    const checkName = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (checkName) {\n      alert(`${name} is already in contacts`);\n      e.target.reset();\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    e.target.reset();\n  };\n\n  return (\n    <FormAddContact onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          size=\"xs\"\n          variant=\"filled\"\n          borderRadius=\"8px\"\n          focusBorderColor=\"teal.500\"\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          size=\"xs\"\n          variant=\"filled\"\n          borderRadius=\"8px\"\n          focusBorderColor=\"teal.500\"\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter phone number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button\n        leftIcon={<BsPersonFillAdd />}\n        colorScheme=\"teal\"\n        size=\"xs\"\n        m=\"0 auto\"\n        type=\"submit\"\n      >\n        Add contact\n      </Button>\n    </FormAddContact>\n  );\n};\n\nexport default Phonebook;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Button, List, ListItem, Text } from '@chakra-ui/react';\nimport { MdDeleteForever } from 'react-icons/md';\nimport { IoIosContact } from 'react-icons/io';\n\nconst ContactsList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n  return (\n    <List spacing={0.1}>\n      {contacts.map(({ id, name, number }) => (\n        <ListItem\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          gap=\"8px\"\n          m=\"8px 0 8px\"\n          key={id}\n        >\n          <IoIosContact />\n          <Text textTransform=\"capitalize\" fontWeight={600} color=\"teal\">\n            {name}:\n          </Text>\n          <Text fontWeight={600}>{number}</Text>\n          <Button\n            leftIcon={<MdDeleteForever />}\n            colorScheme=\"teal\"\n            size=\"xs\"\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </Button>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactsList;\n","import PropTypes from 'prop-types';\nimport { SectionContainer, SectionTitle } from 'components/Style/Style.styled';\n\nconst Section = ({ title, children }) => (\n  <SectionContainer>\n    {title && <SectionTitle>{title}</SectionTitle>}\n    {children}\n  </SectionContainer>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import { useDispatch } from 'react-redux';\nimport { filteredContacts } from 'redux/contacts/contactsSlice';\nimport { Input } from '@chakra-ui/react';\nimport { Label } from '../Style/Style.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Label>\n      Find contact by name\n      <Input\n        size=\"xs\"\n        variant=\"filled\"\n        borderRadius=\"8px\"\n        focusBorderColor=\"teal.500\"\n        type=\"text\"\n        placeholder=\"Enter name\"\n        onChange={e => dispatch(filteredContacts(e.target.value))}\n      />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport Phonebook from 'components/Phonebook';\nimport ContactsList from 'components/ContactsList';\nimport Section from 'components/Section';\nimport Filter from 'components/Filter';\nimport { ContainerContacts } from 'components/Style/Style.styled';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContainerContacts>\n      <Section title=\"Phonebook\">\n        <Phonebook />\n      </Section>\n      {contacts?.length > 0 ? (\n        <Section title=\"Contacts\">\n          {contacts?.length > 1 ? <Filter /> : ''}\n          {isLoading && !error && <b>Request in progress...</b>}\n          <ContactsList />\n        </Section>\n      ) : (\n        <b>Your phonebook is currently empty</b>\n      )}\n    </ContainerContacts>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","filter","contact","name","toLowerCase","includes","useSelector","dispatch","useDispatch","onSubmit","e","preventDefault","target","value","number","some","alert","reset","addContact","I","size","variant","borderRadius","focusBorderColor","type","placeholder","pattern","title","required","leftIcon","colorScheme","m","spacing","map","id","display","alignItems","justifyContent","gap","textTransform","fontWeight","color","onClick","deleteContact","children","onChange","filteredContacts","useEffect","fetchContacts","length"],"sourceRoot":""}