{"version":3,"file":"static/js/630.924cb686.chunk.js","mappings":"mRAEaA,EAAOC,EAAAA,EAAAA,GAAH,uCAIJC,EAAOD,EAAAA,EAAAA,GAAH,+EAMJE,EAAYF,EAAAA,EAAAA,EAAH,kGAMTG,EAAWH,EAAAA,EAAAA,EAAH,mEAKRI,EAAYJ,EAAAA,EAAAA,OAAH,sR,UCMtB,EAlBqB,WACnB,IAAMK,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACV,EAAD,UACGM,EAASK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,UAACZ,EAAD,YACE,UAACC,EAAD,WAAYU,EAAZ,QACA,SAACT,EAAD,UAAWU,KACX,SAACT,EAAD,CAAWU,KAAK,SAASC,QAAS,kBAAMP,GAASQ,EAAAA,EAAAA,IAAcL,GAA7B,EAAlC,sBAHSA,EADC,KAWnB,ECzBYM,EAAYjB,EAAAA,EAAAA,IAAH,mHCATkB,EAAmBlB,EAAAA,EAAAA,IAAH,8CAIhBmB,EAAenB,EAAAA,EAAAA,GAAH,iECSzB,EAZgB,SAAC,GAAD,IAAGoB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,UAACH,EAAD,WACGE,IAAS,SAACD,EAAD,UAAeC,IACxBC,IAHW,E,oBCehB,EAde,WACb,IAAMb,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAAC,KAAD,mCAEE,SAAC,KAAD,CACEK,KAAK,OACLQ,SAAU,SAAAC,GAAC,OAAIf,GAASgB,EAAAA,EAAAA,IAAiBD,EAAEE,OAAOC,OAAvC,MAIlB,EC0BD,EA5BiB,WACf,IAAMlB,GAAWC,EAAAA,EAAAA,MACXkB,GAAYrB,EAAAA,EAAAA,IAAYsB,EAAAA,IACxBC,GAAQvB,EAAAA,EAAAA,IAAYwB,EAAAA,IACpBzB,GAAWC,EAAAA,EAAAA,IAAYyB,EAAAA,IAM7B,OAJAC,EAAAA,EAAAA,YAAU,WACRxB,GAASyB,EAAAA,EAAAA,MACV,GAAE,CAACzB,KAGF,UAACS,EAAD,YACE,SAAC,EAAD,CAASG,MAAM,YAAf,UACE,SAACc,EAAA,GAAD,OAEO,OAAR7B,QAAQ,IAARA,OAAA,EAAAA,EAAU8B,QAAS,GAClB,UAAC,EAAD,CAASf,MAAM,WAAf,WACW,OAARf,QAAQ,IAARA,OAAA,EAAAA,EAAU8B,QAAS,GAAI,SAAC,EAAD,IAAa,GACpCR,IAAcE,IAAS,mDACxB,SAAC,EAAD,QAGF,+DAIP,C","sources":["components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/App/App.styled.js","components/Section/Section.styled.js","components/Section/Section.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const FieldName = styled.p`\n  margin: 8px 0 8px;\n  text-transform: capitalize;\n  font-weight: 600;\n`;\n\nexport const FieldNum = styled.p`\n  margin: 8px 0 8px;\n  font-weight: 600;\n`;\n\nexport const DeleteBtn = styled.button`\n  display: block;\n  height: 25px;\n  border-radius: 8px;\n  border: none;\n  color: #ffffff;\n  background-color: #000000;\n  cursor: pointer;\n  &:hover {\n    color: #000000;\n    background-color: #ffffff;\n    box-shadow: 2px 2px 5px #000000;\n  }\n`;\n","import {\n  List,\n  Item,\n  FieldName,\n  FieldNum,\n  DeleteBtn,\n} from './ContactsList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nconst ContactsList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => (\n        <Item key={id}>\n          <FieldName>{name}:</FieldName>\n          <FieldNum>{number}</FieldNum>\n          <DeleteBtn type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n            Delete\n          </DeleteBtn>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactsList;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 0px 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import styled from '@emotion/styled';\n\nexport const SectionContainer = styled.div`\n  padding: 20px 0px;\n`;\n\nexport const SectionTitle = styled.h2`\n  font-weight: 600;\n  font-size: 24px;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionContainer, SectionTitle } from './Section.styled';\n\nconst Section = ({ title, children }) => (\n  <SectionContainer>\n    {title && <SectionTitle>{title}</SectionTitle>}\n    {children}\n  </SectionContainer>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import { Label, Input } from '../Phonebook/Phonebook.styled';\nimport { useDispatch } from 'react-redux';\nimport { filteredContacts } from 'redux/contacts/contactsSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Label>\n      Find contact by name\n      <Input\n        type=\"text\"\n        onChange={e => dispatch(filteredContacts(e.target.value))}\n      />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport Phonebook from 'components/Phonebook';\nimport ContactsList from 'components/ContactsList';\nimport { Container } from 'components/App/App.styled';\nimport Section from 'components/Section';\nimport Filter from 'components/Filter';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Section title=\"Phonebook\">\n        <Phonebook />\n      </Section>\n      {contacts?.length > 0 ? (\n        <Section title=\"Contacts\">\n          {contacts?.length > 1 ? <Filter /> : ''}\n          {isLoading && !error && <b>Request in progress...</b>}\n          <ContactsList />\n        </Section>\n      ) : (\n        <b>Your phonebook is currently empty</b>\n      )}\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["List","styled","Item","FieldName","FieldNum","DeleteBtn","contacts","useSelector","selectFilteredContacts","dispatch","useDispatch","map","id","name","number","type","onClick","deleteContact","Container","SectionContainer","SectionTitle","title","children","onChange","e","filteredContacts","target","value","isLoading","selectIsLoading","error","selectError","selectContacts","useEffect","fetchContacts","Phonebook","length"],"sourceRoot":""}